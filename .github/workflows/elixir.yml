name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: ['1.14.5', '1.15.7', '1.16.0']
        otp: ['25.3', '26.2']
        exclude:
          - elixir: '1.16.0'
            otp: '25.3'

    steps:
    - uses: actions/checkout@v4
    
    - name: Install OpenGL and display dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          mesa-common-dev \
          xvfb \
          x11-utils \
          libx11-dev \
          libxrandr2 \
          libxi6 \
          libxcursor1 \
          libxinerama1
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
        
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-
          
    - name: Install dependencies
      run: mix deps.get
      
    - name: Compile
      run: mix compile --warnings-as-errors
      
    - name: Run tests with virtual display
      run: |
        export DISPLAY=:99.0
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3  # Give Xvfb time to start
        mix test
      env:
        # Ensure software rendering is used
        LIBGL_ALWAYS_SOFTWARE: 1
        # Mark as CI environment to skip interactive examples
        CI: true
